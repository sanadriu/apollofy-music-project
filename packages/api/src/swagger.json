{
  "openapi": "3.0.0",
  "info": {
    "title": "Stringifiers API",
    "version": "0.1.0"
  },
  "servers": [
    {
      "description": "Main (production) server"
    }
  ],
  "paths": {
    "/sign-up": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Registers the user in the database using the data inside Firebase JWT and returns its profile.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Users created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Email is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/sign-in": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Processes the login request and returns the authenticated user's profile.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/sign-out": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Processes the logout request.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": "OK"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns a list of users.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "no_data",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{idUser}": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns a single user.",
        "parameters": [
          {
            "in": "path",
            "name": "idUser",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{idUser}/follow": {
      "patch": {
        "tags": ["Users"],
        "summary": "Follows another user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idUser",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation done successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "One of the users were not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns the authenticated user's profile.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/WithEmail"
                            },
                            {
                              "$ref": "#/components/schemas/User"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Updates the authenticated user's profile.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": null
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Deletes the authenticated user's account.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": null
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/followed-users": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns the authenticated user's followed or unfollowed users.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "no_data",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "exclude",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/tracks": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns the authenticated user's added tracks.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "no_data",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Tracks fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Track"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/albums": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns the authenticated user's added albums.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "no_data",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Albums fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Album"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/playlists": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns the authenticated user's added playlists.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "no_data",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Playlists fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Playlist"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/tracks": {
      "get": {
        "tags": ["Tracks"],
        "summary": "Returns a list of tracks.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "no_data",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "example": "userId"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "genre",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Tracks fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/WithUser"
                              },
                              {
                                "$ref": "#/components/schemas/Track"
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tracks"],
        "summary": "Adds a new track",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Track created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": "trackId"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/tracks/{idTrack}": {
      "get": {
        "tags": ["Tracks"],
        "summary": "Returns a single track.",
        "parameters": [
          {
            "in": "path",
            "name": "idTrack",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Track fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/WithUser"
                            },
                            {
                              "$ref": "#/components/schemas/Track"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Track not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Tracks"],
        "summary": "Updates a track owned by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idTrack",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": null
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Owner or track not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tracks"],
        "summary": "Deletes a track owned by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idTrack",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Track deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": null
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Owner or track not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/tracks/{idTrack}/like": {
      "patch": {
        "tags": ["Tracks"],
        "summary": "Gives a like to a track.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idTrack",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation done successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Track or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/tracks/{idTrack}/play": {
      "patch": {
        "tags": ["Tracks"],
        "summary": "Increment by one the times the track has been played.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idTrack",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation done successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Track or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/albums": {
      "get": {
        "tags": ["Albums"],
        "summary": "Returns a list of albums.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "no_data",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "example": "userId"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "track",
            "schema": {
              "example": "trackId"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "genre",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Albums fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/WithUser"
                              },
                              {
                                "$ref": "#/components/schemas/Album"
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Albums"],
        "summary": "Adds a new album",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Album created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": "albumId"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/albums/{idAlbum}": {
      "get": {
        "tags": ["Albums"],
        "summary": "Returns a single album.",
        "parameters": [
          {
            "in": "path",
            "name": "idAlbum",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Album fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/WithUser"
                            },
                            {
                              "$ref": "#/components/schemas/Album"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Album not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Albums"],
        "summary": "Updates a album owned by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idAlbum",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": null
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Owner or album not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Albums"],
        "summary": "Deletes an album owned by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idAlbum",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Album deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": null
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Owner or album not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/albums/{idAlbum}/like": {
      "patch": {
        "tags": ["Albums"],
        "summary": "Gives a like to an album.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idAlbum",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation done successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Album or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/playlists": {
      "get": {
        "tags": ["Playlists"],
        "summary": "Returns a list of playlists.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "no_data",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "example": "userId"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Playlists fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/WithUser"
                              },
                              {
                                "$ref": "#/components/schemas/Playlist"
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Playlists"],
        "summary": "Adds a new playlist",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Playlist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": "playlistId"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/playlists/{idPlaylist}": {
      "get": {
        "tags": ["Playlists"],
        "summary": "Returns a single playlist.",
        "parameters": [
          {
            "in": "path",
            "name": "idPlaylist",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/WithUser"
                            },
                            {
                              "$ref": "#/components/schemas/Playlist"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Playlist not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Playlists"],
        "summary": "Updates a playlist owned by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idPlaylist",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": null
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Owner or playlist not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Playlists"],
        "summary": "Deletes a playlist owned by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idPlaylist",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "example": null
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Owner or playlist not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/playlists/{idPlaylist}/follow": {
      "patch": {
        "tags": ["Playlists"],
        "summary": "Follow a playlist.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idPlaylist",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation done successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Playlist or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/genres": {
      "get": {
        "tags": ["Genres"],
        "summary": "Returns a list of genres.",
        "responses": {
          "200": {
            "description": "Genres fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/WithUser"
                              },
                              {
                                "$ref": "#/components/schemas/Genre"
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    },
                    {
                      "$ref": "#/components/schemas/WithPagination"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/genres/{idGenre}": {
      "get": {
        "tags": ["Genres"],
        "summary": "Returns a single genre.",
        "parameters": [
          {
            "in": "path",
            "name": "idGenre",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Genre fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/WithUser"
                            },
                            {
                              "$ref": "#/components/schemas/Genre"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponseSuccess"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong input value in params or query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Genre not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WithId"
          },
          {
            "$ref": "#/components/schemas/UserBody"
          },
          {
            "$ref": "#/components/schemas/UserRelations"
          },
          {
            "$ref": "#/components/schemas/UserStats"
          },
          {
            "$ref": "#/components/schemas/WithFollowers"
          }
        ]
      },
      "Track": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WithId"
          },
          {
            "$ref": "#/components/schemas/WithUser"
          },
          {
            "$ref": "#/components/schemas/TrackBody"
          },
          {
            "$ref": "#/components/schemas/WithLikes"
          }
        ]
      },
      "Album": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WithId"
          },
          {
            "$ref": "#/components/schemas/WithUser"
          },
          {
            "$ref": "#/components/schemas/AlbumBody"
          },
          {
            "$ref": "#/components/schemas/WithLikes"
          }
        ]
      },
      "Playlist": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WithId"
          },
          {
            "$ref": "#/components/schemas/WithUser"
          },
          {
            "$ref": "#/components/schemas/PlaylistBody"
          },
          {
            "$ref": "#/components/schemas/WithFollowers"
          }
        ]
      },
      "Genre": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WithId"
          },
          {
            "$ref": "#/components/schemas/GenreBody"
          }
        ]
      },
      "UserBody": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "firstname": {
                "type": "string"
              },
              "lastname": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "birth_date": {
                "type": "string",
                "format": "date"
              },
              "thumbnails": {
                "$ref": "#/components/schemas/WithThumbnails"
              }
            }
          }
        ]
      },
      "UserRelations": {
        "type": "object",
        "properties": {
          "liked_albums": {
            "type": "array",
            "items": {
              "example": "albumId"
            }
          },
          "liked_tracks": {
            "type": "array",
            "items": {
              "example": "trackId"
            }
          },
          "followed_playlists": {
            "type": "array",
            "items": {
              "example": "playlistId"
            }
          },
          "followed_users": {
            "type": "array",
            "items": {
              "example": "userId"
            }
          }
        }
      },
      "UserStats": {
        "type": "object",
        "properties": {
          "num_liked_albums": {
            "type": "integer",
            "minimum": 0
          },
          "num_liked_tracks": {
            "type": "integer",
            "minimum": 0
          },
          "num_followed_playlists": {
            "type": "integer",
            "minimum": 0
          },
          "num_followed_users": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "TrackBody": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "released_date": {
                "type": "string",
                "format": "date"
              },
              "url": {
                "example": "http://foo.bar/song.mp3"
              },
              "duration": {
                "type": "integer",
                "minimum": 0
              },
              "color": {
                "type": "string"
              },
              "thumbnails": {
                "$ref": "#/components/schemas/WithThumbnails"
              }
            }
          },
          {
            "$ref": "#/components/schemas/WithGenres"
          }
        ]
      },
      "TrackStats": {
        "type": "object",
        "properties": {
          "num_plays": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "AlbumBody": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "released_date": {
                "type": "string",
                "format": "date"
              },
              "thumbnails": {
                "$ref": "#/components/schemas/WithThumbnails"
              }
            }
          },
          {
            "$ref": "#/components/schemas/WithGenres"
          },
          {
            "$ref": "#/components/schemas/WithTracks"
          }
        ]
      },
      "PlaylistBody": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "thumbnails": {
                "$ref": "#/components/schemas/WithThumbnails"
              }
            }
          },
          {
            "$ref": "#/components/schemas/WithTracks"
          }
        ]
      },
      "GenreBody": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "thumbnails": {
                "$ref": "#/components/schemas/WithThumbnails"
              }
            }
          }
        ]
      },
      "WithId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "WithTimestamps": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WithThumbnails": {
        "type": "object",
        "properties": {
          "url_default": {
            "example": "http://foo.bar/image.png"
          },
          "url_medium": {
            "example": "http://foo.bar/image.png"
          },
          "url_large": {
            "example": "http://foo.bar/image.png"
          }
        }
      },
      "WithUser": {
        "type": "object",
        "properties": {
          "user": {
            "example": "userId"
          }
        }
      },
      "WithLikes": {
        "type": "object",
        "properties": {
          "liked_by": {
            "type": "array",
            "items": {
              "example": "userId"
            }
          },
          "num_likes": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "WithFollowers": {
        "type": "object",
        "properties": {
          "followed_by": {
            "type": "array",
            "items": {
              "example": "userId"
            }
          },
          "num_followers": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "WithGenres": {
        "type": "object",
        "properties": {
          "genres": {
            "type": "array",
            "items": {
              "type": "genreId"
            }
          }
        }
      },
      "WithTracks": {
        "type": "object",
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "example": "trackId"
            }
          }
        }
      },
      "WithEmail": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "ResponseSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string"
          }
        }
      },
      "WithPagination": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          },
          "page": {
            "type": "integer",
            "nullable": true
          }
        }
      }
    }
  }
}
